require './lib/course'
require './lib/student'
require './lib/gradebook'

RSpec.describe Gradebook do
    before(:each) do
        @course1 = Course.new("Calculus", 2)
        @course2 = Course.new("English LIt", 2)
        @student1 = Student.new({name: "Morgan", age: 21})
        @student2 = Student.new({name: "Jordan", age: 29})
        @gradebook = Gradebook.new("Nick Teets")
    end

    it 'can initalize' do
        expect(@gradebook).to be_instance_of(Gradebook)
        expect(@gradebook.instructor).to eq("Nick Teets")
        expect(@gradebook.courses).to eq([])
    end

    it 'can add a course to the courses array' do
        @gradebook.add_course(@course1)
        expect(@gradebook.courses).to eq([@course1])
        
        @gradebook.add_course(@course2)
        expect(@gradebook.courses).to eq([@course1, @course2])
    end

    it 'can list students in courses' do
        @course1.enroll(@student1)
        @course1.enroll(@student2)
        @course2.enroll(@student1)

        @gradebook.add_course(@course1)
        @gradebook.add_course(@course2)

        result_hash = {
            @course1 => [
                @student1,
                @student2
            ],
            @course2 => [
                @student1
            ]
        }
        expect(@gradebook.list_all_students).to eq(result_hash)
    end

    it 'reports students below grade threshhold' do
        @course1.enroll(@student1)
        @course1.enroll(@student2)
        @course2.enroll(@student1)

        @gradebook.add_course(@course1)
        @gradebook.add_course(@course2)
        
        @student1.log_score(90)
        @student1.log_score(95)
        @student2.log_score(85)
        @student2.log_score(75)

        expect(@gradebook.students_below(95)).to eq([@student1, @student2])
        expect(@gradebook.students_below(85)).to eq([@student2])
    end
end